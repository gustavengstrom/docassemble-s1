metadata:
  title: |
    ESRS-2-SBM-2
  short title: |
    Strategy and Business Model (SBM)&#58; Interests and views of stakeholders
  show login: False
  description: |
    When responding to ESRS 2 SBM-2, the undertaking shall disclose how the interests, views, and rights of people in its own workforce, including respect for their human rights, inform its strategy and business model. The undertaking’s own workforce is a key group of affected stakeholders. If unsure, leave blank. 
  revision_date: 2024-12-30
---
modules:
  - .post
---
features:
  #css: sds.css # local CSS pointer ## goood tutorial for styling da: https://www.youtube.com/watch?v=6a3sER5MOK8
  popover trigger: hover # how to display interactive content/hyperlinks
  bootstrap theme: https://bootswatch.com/5/flatly/bootstrap.min.css
  navigation: True
  progress bar: True
  show progress bar percentage: True
  progressive: True
  inverse navbar: False
  hide navbar: True
  question help button: True
---
field: intro_screen
question: |
  Strategy and Business Model (SBM)&#58; Interests and views of stakeholders
subquestion: |
  When responding to ESRS 2 SBM-2, the undertaking shall disclose how the interests, views, and rights of people in its own workforce, including respect for their human rights, inform its strategy and business model. The undertaking’s own workforce is a key group of affected stakeholders. If unsure, leave blank.

  To get started, press **Continue**.
---
reset:
  - validate_status
---
mandatory: True
code: |
  multi_user = True
  guest_member = None

  # If not local browser session (device_local) has a token attribute then we look if it has been submitted as a query param
  # This works together with reset validate_status to ensure that every refresh and browser start token validity is checked
  if not hasattr(device_local, 'token'):
    device_local.token = url_args.get("token", "token_arg_not_found")
  # if "token" in url_args:
  #   del url_args["token"]

  django_hostname = os.environ.get("DJANGOHOSTNAME")
  login_url = f"https://{django_hostname}/accounts/login/"

  intro_screen
  validate_status, validate_content = validate_session(device_local.token)
  if validate_status != 200:
     invalid_token_screen
  else:
    session_info = json.loads(validate_content)
    board_id = session_info.get("board_id", "")
    survey_id = session_info.get("survey_id", "")
    guest_member = session_info.get("guest_member")
    external = session_info.get("external")
    include_question_ids = session_info.get("include_question_ids")
    
  if guest_member:
    redirect_url = "https://www.beyondcsrd.se"
  else:
    redirect_url = f"https://{django_hostname}/pages/{board_id}/{survey_id}/completed/?submitted=1"

  if external:
    external_organisation_name
  else:
    external_organisation_name = None

  question_ids = ["ESRS_2_SBM_2_1", "ESRS_2_SBM_2_2"]

  if include_question_ids: 
    for question_id in question_ids:
        if not question_id in include_question_ids:
          define(question_id, "")
          
  else:
    include_question_ids = question_ids
    

  # This is needed so we can filter active interviews on board_id
  session_tags().add(board_id)
  session_tags().add(board_id+"__"+survey_id)

  survey_data = []
  survey_data.append({'name': 'Do the interests, views, and rights of people in its own workforce, including respect for their human rights, inform the undertaking&#x27;s strategy and business model?', 'value': ESRS_2_SBM_2_1 if ESRS_2_SBM_2_1!='None' else '', 'id': 'ESRS_2_SBM_2_1', 'answer_type': 'Yes/No/Partly', 'included': 'ESRS_2_SBM_2_1' in include_question_ids})
  survey_data.append({'name': 'Please disclose how the interests, views, and rights of people in its own workforce, including respect for their human rights, inform the undertaking&#x27;s strategy and business model.', 'value': ESRS_2_SBM_2_2, 'id': 'ESRS_2_SBM_2_2', 'answer_type': 'OPEN_LARGE', 'included': 'ESRS_2_SBM_2_2' in include_question_ids})

  card_title = 'esrs-2-sbm-2'
  card_description = ''
  # Description section in the wekan board - need to be composed with markdown and be populated with datapartner_url from the intervfile_uploadsiew.
  card_title = f"{card_title}"
  card_description = f"{card_description}"
  
  email_title = 'esrs-2-sbm-2'
  #! Email compose for outgoing email.
  email_body = f"Dear Partner, <br> <br> This is an automated message to confirm we have recieved the form - {email_title}.  <br> <br> Best regards <br> reportAll Team."
  
  email_data = [
      {
          "subject": email_title,
          "body": email_body,
          "recipients": [],
          "from": "info@reportall.se",
      }
  ]

  survey_data_ids = [d['id'] for d in survey_data]
  survey_analytics = []
  survey_analytics.append({"id": "S1_compliance_F1", "name": "S1 compliance ratio", "values": ["ESRS_2_SBM_2_1", "ESRS_2_SBM_2_2"], "dtypes": []})
  survey_analytics.append({"id": "ESRS_2_SBM_2_F1", "name": "Below, the undertaking describes how he interests, views, and rights of people in its own workforce, including respect for their human rights, inform the undertaking's strategy and business model.", "values": ["ESRS_2_SBM_2_2"], "dtypes": ["OPEN_LARGE"]})

  survey_analytics_dq = []
  for sa_idx, sa in enumerate(survey_analytics):
    if not all([_id in survey_data_ids for _id in sa["values"]]):
      sd_tag = []
      sd_found = []
      drop_sa_ids = []
      for sd in survey_data:
        for _id in sa["values"]:
          if _id in sd["id"]:
            sd_found.append(sd["id"])
            tag = sd.get("tag")
            if tag:
              sd_tag.append(tag)
            break
        if len(sd_found) == len(sa["values"]) and len(sd_found)>0:   # Found all sa values in survey_data
          dynamic_sa_dict = survey_analytics[sa_idx].copy()
          dynamic_sa_dict["id"] = dynamic_sa_dict["id"] + f"__DQ{sd_found[0].split('__DQ')[-1]}"
          dynamic_sa_dict["values"] = sd_found
          dynamic_sa_dict["tag"] = next(iter(set(sd_tag)), None)
          survey_analytics_dq.append(dynamic_sa_dict)
          drop_sa_ids.append(sa_idx)
          sd_found = []
          sd_tag = []
    else:
      survey_analytics_dq.append(sa)


  data = {
      "board_id": board_id,
      "survey_id": survey_id,
      "external_organisation": external_organisation_name,
      "survey_data": survey_data,
      "survey_analytics": survey_analytics_dq,
      "survey_uploads": [],
      "max_responses": {"count": "1", "date_period": "year", "column_title": "Fiscal year"},
      "wekan_data": {
          "card_title": card_title,
          "card_description": card_description
  
      },
      # "email_data": email_data,
      "aux_data": [
      ],
      "guest_member": guest_member,
    }


  # send data to django
  final_screen
  reponse_status_code, response_content = store_interview_results(data)
  if reponse_status_code == 200:
    define('error_screen', False) 
    command('exit', url=redirect_url)
  else:
    error_screen
--- 
progress: 0
question: |
  Do the interests, views, and rights of people in its own workforce, including respect for their human rights, inform the undertaking&#x27;s strategy and business model? 
back button: True
fields:
  - no label: ESRS_2_SBM_2_1
    input type: radio
    required: false
    choices:
      - Yes
      - No
      - Partly
--- 
progress: 50
question: |
  Please disclose how the interests, views, and rights of people in its own workforce, including respect for their human rights, inform the undertaking&#x27;s strategy and business model. 
back button: True
fields:
  - no label: ESRS_2_SBM_2_2
    datatype: area
    required: false
---
progress: 0
back button: True
question: |
  Please enter the name of the organisation you represent.
fields:
  - Organisation name: external_organisation_name
    required: false

---
#! Response report before submission
progress: 100
field: final_screen
back button: True
question: |
  Congratulations!
subquestion: |
  All questions have been addressed. Press the submit button below to send in your answers.
continue button label: Submit answers!

---
#! Response report before submission
event: error_screen
prevent going back: True
question: |
  Something went wrong when submitting your answers. 
subquestion: |  
  Please try again or contact <a href="mailto:info@beyondcsrd.se">info@beyondcsrd.se</a> for help.
under: |
  Details: ${ response_content.decode() }
buttons:
  Exit: exit

---

event: require_login_screen
question: |
  Oops! You have been logged out. Please login again.
subquestion: |
  ${ action_button_html(login_url, size='md', color='primary', label='Login', new_window=False) }

---

event: invalid_token_screen
question: |
  Your survey token is invalid. Please contact the administrator to request a new url. 

---