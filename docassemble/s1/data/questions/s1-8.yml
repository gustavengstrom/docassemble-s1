metadata:
  title: |
    s1-8
  short title: |
    The undertaking shall disclose information on the extent to which the working conditions and terms of employment of its employees are determined or influenced by collective bargaining agreements and on the extent to which its employees are represented in social dialogue in the European Economic Area (EEA) at the establishment and European level. All questions marked with * are voluntary. If unsure, leave blank.
  show login: False
  description: |
    DESCRIPTION 
  revision_date: 2024-09-12
---
modules:
  - .post
---
features:
  #css: sds.css # local CSS pointer ## goood tutorial for styling da: https://www.youtube.com/watch?v=6a3sER5MOK8
  popover trigger: hover # how to display interactive content/hyperlinks
  bootstrap theme: https://bootswatch.com/5/flatly/bootstrap.min.css
  navigation: True
  progress bar: True
  show progress bar percentage: True
  progressive: True
  inverse navbar: False
  hide navbar: True
  question help button: True
---
field: intro_screen
question: |
  Social 1-8 Own Workforce: Collective bargaining coverage and social dialogue
subquestion: |
  The undertaking shall disclose information on the extent to which the working conditions and terms of employment of its employees are determined or influenced by collective bargaining agreements and on the extent to which its employees are represented in social dialogue in the European Economic Area (EEA) at the establishment and European level. All questions marked with * are voluntary. If unsure, leave blank.

  To get started, press **Continue**.
---
mandatory: True
code: |
  multi_user = True
  guest_member = None

  # Get query params
  board_id = url_args.get("board_id", "")
  survey_id = url_args.get("survey_id", "")
  django_hostname = os.environ.get("DJANGOHOSTNAME")
  redirect_url = f"https://{django_hostname}/pages/{board_id}/{survey_id}/completed/?submitted=1"
  login_url = f"https://{django_hostname}/accounts/login/"

  token = url_args.get("token")

  intro_screen
  validate_status, validate_content = validate_session({"token": token, "board_id": board_id, "survey_id": survey_id})
  if validate_status != 200:
     invalid_token_screen
  else:
    session_info = json.loads(validate_content)
    guest_member = session_info.get("boardmember_id")
    if guest_member:
      redirect_url = "https://www.beyondcsrd.se"

  # Get more query params
  organisation_id = url_args.get("organisation", "")
  target_date = url_args.get("target_date")
  external_organisation = url_args.get("external_organisation")
  wekan_board = url_args.get("wekan_board")   # If wekan_board is set to None the list and swimlane info will be retrieved in the django backend
  list_id = url_args.get("list_id", "optional_default_list_id")
  swimlane_id = url_args.get("swimlane_id", "optional_default_swimlane_id")

  # This is needed so we can filter active interviews on board_id
  session_tags().add(board_id)
  session_tags().add(board_id+"__"+survey_id)
  session_tags().add(board_id+"__"+survey_id+"__"+organisation_id)

  survey_data = []
  survey_data.append({'name': 'How many of the undertaking&#x27;s employees are covered by collective bargaining agreements?', 'value': S1_8_1, 'id': 'S1_8_1', 'answer_type': 'PERCENT'})
  survey_data.append({'name': 'Please state the percentage of employees covered by collective bargaining agreements within coverage rate by country (in the EEA).', 'value': S1_8_2, 'id': 'S1_8_2', 'answer_type': 'PERCENT'})
  survey_data.append({'name': 'Please state the percentage of own employees covered by collective bargaining agreements (outside EEA) by region.', 'value': S1_8_3, 'id': 'S1_8_3', 'answer_type': 'PERCENT'})
  survey_data.append({'name': 'Please describe extent to which working conditions and terms of employment for employees not covered by collective bargaining agreements are determined based on collective bargaining agreements that cover other employees or based on collective bargaining agreements from other undertakings.*', 'value': S1_8_4, 'id': 'S1_8_4', 'answer_type': 'OPEN'})
  survey_data.append({'name': 'Please describe extent to which working conditions and terms of employment of non-employees in own workforce are determined or influenced by collective bargaining agreements.*', 'value': S1_8_5, 'id': 'S1_8_5', 'answer_type': 'OPEN_LARGE'})
  survey_data.append({'name': 'Please state the percentage of employees in country (EEA) covered by workers&#x27; representatives.', 'value': S1_8_6, 'id': 'S1_8_6', 'answer_type': 'PERCENT'})
  survey_data.append({'name': 'Please disclose the existence of any agreement with employees for representation by European Works Council (EWC), Societas Europaea (SE) Works Council, or Societas Cooperativa Europaea (SCE) Works Council.', 'value': S1_8_7, 'id': 'S1_8_7', 'answer_type': 'OPEN_LARGE'})
  survey_data.append({'name': 'Please disclose the undertaking&#x27;s own workforce in region (non-EEA) covered by collective bargaining agreements by coverage rate and by region.', 'value': S1_8_8, 'id': 'S1_8_8', 'answer_type': 'OPEN_LARGE'})

  card_title = 's1-8'
  card_description = ''
  # Description section in the wekan board - need to be composed with markdown and be populated with datapartner_url from the intervfile_uploadsiew.
  card_title = f"{card_title}"
  card_description = f"{card_description}"
  
  email_title = 's1-8'
  #! Email compose for outgoing email.
  email_body = f"Dear Partner, <br> <br> This is an automated message to confirm we have recieved the form - {email_title}.  <br> <br> Best regards <br> reportAll Team."
  
  email_data = [
      {
          "subject": email_title,
          "body": email_body,
          "recipients": [],
          "from": "info@reportall.se",
      }
  ]

  survey_data_ids = [d['id'] for d in survey_data]
  survey_analytics = []
  survey_analytics.append({"id": "sc_id","name": "score_coverage", "values": [dyn_id for dyn_id in survey_data_ids if any([sa_id in dyn_id for sa_id in ['S1_8_1', 'S1_8_2', 'S1_8_3', 'S1_8_6', 'S1_8_7', 'S1_8_8']])]})
  survey_analytics.append({"id": "S1_8_F1", "name": "Collective Bargaining", "values": ["S1_8_1", "S1_8_2", "S1_8_3", "S1_8_6", "S1_8_8"], "labels": ["Percentage covered", "Percentage within coverage rate of country", "Percentage covered outside EEA", "Percentage of employee in country covered by workers' representatives", "Coverage outside EEA"], "dtypes": ["PERCENT", "PERCENT", "PERCENT", "PERCENT", "OPEN_LARGE"]})

  survey_analytics_dq = []
  for sa_idx, sa in enumerate(survey_analytics):
    if not all([_id in survey_data_ids for _id in sa["values"]]):
      sd_tag = []
      sd_found = []
      drop_sa_ids = []
      for sd in survey_data:
        for _id in sa["values"]:
          if _id in sd["id"]:
            sd_found.append(sd["id"])
            tag = sd.get("tag")
            if tag:
              sd_tag.append(tag)
            break
        if len(sd_found) == len(sa["values"]) and len(sd_found)>0:   # Found all sa values in survey_data
          dynamic_sa_dict = survey_analytics[sa_idx].copy()
          dynamic_sa_dict["id"] = dynamic_sa_dict["id"] + f"__DQ{sd_found[0].split('__DQ')[-1]}"
          dynamic_sa_dict["values"] = sd_found
          dynamic_sa_dict["tag"] = next(iter(set(sd_tag)), None)
          survey_analytics_dq.append(dynamic_sa_dict)
          drop_sa_ids.append(sa_idx)
          sd_found = []
          sd_tag = []
    else:
      survey_analytics_dq.append(sa)


  data = {
      "board_id": board_id,
      "survey_id": survey_id,
      "organisation_id": organisation_id,
      "external_organisation": external_organisation,
      "survey_data": survey_data,
      "survey_analytics": survey_analytics_dq,
      "survey_uploads": [],
      "max_responses": {"count": "9", "date_period": "year", "column_title": "Fiscal year"},
      "target_date": target_date,
      "wekan_board": wekan_board,
      "list_id": list_id,
      "swimlane_id": swimlane_id,
      "wekan_data": {
          "card_title": card_title,
          "card_description": card_description
  
      },
      # "email_data": email_data,
      "aux_data": [
      ],
      "guest_member": guest_member,
    }


  # send data to django
  final_screen
  reponse_status_code, response_content = store_interview_results(data)
  if reponse_status_code == 200:
    define('error_screen', False) 
    command('exit', url=redirect_url)
  else:
    error_screen
--- 
progress: 0
question: |
  How many of the undertaking&#x27;s employees are covered by collective bargaining agreements? 
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    AR 66. The percentage of employees covered by collective bargaining agreements is calculated using the following formula&#58;
    𝑁𝑢𝑚𝑏𝑒𝑟 𝑜𝑓 𝑒𝑚𝑝𝑙𝑜𝑦𝑒𝑒𝑠 𝑐𝑜𝑣𝑒𝑟𝑒𝑑 𝑏𝑦 𝑐𝑜𝑙𝑙𝑒𝑐𝑡𝑖𝑣𝑒 𝑏𝑎𝑟𝑔𝑎𝑖𝑛𝑖𝑛𝑔 𝑎𝑔𝑟𝑒𝑒𝑚𝑒𝑛𝑡𝑠
    __________________________________________________________ 𝑥 100
    𝑁𝑢𝑚𝑏𝑒𝑟 𝑜𝑓 𝑒𝑚𝑝𝑙𝑜𝑦𝑒𝑒𝑠
back button: True
fields:
  - no label: S1_8_1
    datatype: number
    required: false
--- 
progress: 13
question: |
  Please state the percentage of employees covered by collective bargaining agreements within coverage rate by country (in the EEA). 
back button: True
fields:
  - no label: S1_8_2
    datatype: number
    required: false
--- 
progress: 25
question: |
  Please state the percentage of own employees covered by collective bargaining agreements (outside EEA) by region. 
back button: True
fields:
  - no label: S1_8_3
    datatype: number
    required: false
--- 
progress: 38
question: |
  Please describe extent to which working conditions and terms of employment for employees not covered by collective bargaining agreements are determined based on collective bargaining agreements that cover other employees or based on collective bargaining agreements from other undertakings.* 
back button: True
fields:
  - no label: S1_8_4
    datatype: text
    required: false
--- 
progress: 50
question: |
  Please describe extent to which working conditions and terms of employment of non-employees in own workforce are determined or influenced by collective bargaining agreements.* 
back button: True
fields:
  - no label: S1_8_5
    datatype: area
    required: false
--- 
progress: 63
question: |
  Please state the percentage of employees in country (EEA) covered by workers&#x27; representatives. 
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    AR 69. For calculating the information required by paragraph 63(a), the undertaking shall identify in which European Economic Area (EEA) countries it has significant employment (i.e., at least 50 employees representing at least 10% of its total employees). For these countries it shall report the percentage of employees in that country which are employed in establishments in which employees are represented by workers’ representatives. Establishment is defined as any place of operations where the undertaking carries out a non-transitory economic activity with human means and goods. Examples include&#58; a factory, a branch of a retail chain, or an undertaking’s headquarters. For countries in which there is only one establishment the percentage reported shall be either 100% or 0%.
    𝑁𝑢𝑚𝑏𝑒𝑟 𝑜𝑓 𝑒𝑚𝑝𝑙𝑜𝑦𝑒𝑒𝑠 𝑤𝑜𝑟𝑘𝑖𝑛𝑔 𝑖𝑛 𝑒𝑠𝑡𝑎𝑏𝑙𝑖𝑠ℎ𝑚𝑒𝑛𝑡𝑠 𝑤𝑖𝑡ℎ 𝑤𝑜𝑟𝑘𝑒𝑟𝑠′
    𝑟𝑒𝑝𝑟𝑒𝑠𝑒𝑛𝑡𝑎𝑡𝑖𝑣𝑒𝑠
    __________________________________________________________ 𝑥 100
    𝑁𝑢𝑚𝑏𝑒𝑟 𝑜𝑓 𝑒𝑚𝑝𝑙𝑜𝑦𝑒𝑒𝑠
back button: True
fields:
  - no label: S1_8_6
    datatype: number
    required: false
--- 
progress: 75
question: |
  Please disclose the existence of any agreement with employees for representation by European Works Council (EWC), Societas Europaea (SE) Works Council, or Societas Cooperativa Europaea (SCE) Works Council. 
back button: True
fields:
  - no label: S1_8_7
    datatype: area
    required: false
--- 
progress: 88
question: |
  Please disclose the undertaking&#x27;s own workforce in region (non-EEA) covered by collective bargaining agreements by coverage rate and by region. 
back button: True
fields:
  - no label: S1_8_8
    datatype: area
    required: false
---
#! Response report before submission
progress: 100
field: final_screen
back button: True
question: |
  Congratulations!
subquestion: |
  All questions have been addressed. Press the submit button below to send in your answers.
continue button label: Submit answers!

---
#! Response report before submission
event: error_screen
prevent going back: True
question: |
  Something went wrong when submitting your answers. 
subquestion: |  
  Please try again or contact <a href="mailto:info@beyondcsrd.se">info@beyondcsrd.se</a> for help.
under: |
  Details: ${ response_content.decode() }
buttons:
  Exit: exit

---

event: require_login_screen
question: |
  Oops! You have been logged out. Please login again.
subquestion: |
  ${ action_button_html(login_url, size='md', color='primary', label='Login', new_window=False) }

---

event: invalid_token_screen
question: |
  Your survey token is invalid. Please contact the administrator to request a new url. 
subquestion: |
  ${ action_button_html(login_url, size='md', color='primary', label='Login', new_window=False) }

---